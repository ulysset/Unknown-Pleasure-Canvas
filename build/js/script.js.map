{"version":3,"sources":["script.js"],"names":["canvas","document","querySelector","c","getContext","roundness","xArrivalOld","xArrival","yLineBegin","yArrivalOld","lineHeightStartEnd","lineHeightQuarter","lineHeightMiddle","spaceBetween","numberGenerator","start","limit","Math","floor","random","bezierDraw","yArrival","bezierCurveTo","lineDraw","i","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","fillStyle","fillRect","fill","randomizer","loop","requestAnimationFrame","clearRect","width","height"],"mappings":"AAAA,YAAA,IAAMA,QAASC,SAASC,cAAc,cAChCC,EAAIH,OAAOI,WAAW,MAExBC,UAAqB,GACrBC,YAAqB,IACrBC,SAAqB,IACrBC,WAAqB,GACrBC,YAAqBD,WACrBE,mBAAqB,EACrBC,kBAAqB,GACrBC,iBAAqB,GACrBC,aAAqB,GAGnBC,gBAAkB,SAACC,EAAOC,GAAW,MAAOC,MAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAU,EAAIA,GAE5FK,WAAa,SAACb,EAAUc,GAC1BlB,EAAEmB,cACMhB,YAAcD,WAAaE,EAAWD,aACtCG,YACAF,EAAWF,WAAaE,EAAWD,aACnCe,EACAd,EACAc,GACHf,YAESC,EACdE,YAAcY,GAGZE,SAAW,WACb,IAAK,GAAIC,GAAI,EAAO,GAAJA,EAAQA,IAAK,CAWX,IATdhB,YAAcK,aAAaJ,YAEbD,WAAWD,SAEd,IACXJ,EAAEsB,YACFtB,EAAEuB,OAAOnB,SAAUC,YAAYL,EAE7BwB,OAAOpB,SAAW,EAAGC,YACvBD,UAAY,EAEM,IAAXA,UAEHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAWO,gBAAgBN,WAAaE,mBAAoBF,YAC1E,MAEiB,IAAXD,UACHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAWO,gBAAgBN,WAAaG,kBAAmBH,YACzE,MAEiB,IAAXD,UACHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAWO,gBAAgBN,WAAaI,iBAAkBJ,YACxE,MAEiB,IAAXD,UACHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAWO,gBAAgBN,WAAaG,kBAAmBH,YACzE,MAEiB,IAAXD,UACHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAWO,gBAAgBN,WAAaE,mBAAoBF,YAE3EF,aAAc,IAAIH,EAGhBwB,OAAO,IAAKnB,YAAYL,EAExByB,UAAY,EACdzB,EAAE0B,YAAc,UAChB1B,EAAE2B,SACF3B,EAAE4B,UAAY,UAAU5B,EAEtB6B,SAAS,EAAGxB,WAAY,IAAM,IAChCL,EAAE8B,QAGVV,WAEA,IAAIW,YAAajC,SAASC,cAAc,eAGpCsB,EAAI,EACFW,KAAO,QAAPA,KACM,GAAJX,GACAY,sBAAsBD,GAAM3B,WAEf,GACbC,YAAcD,WAAWL,EAEvBkC,UAAU,EAAG,EAAGrC,OAAOsC,MAAOtC,OAAOuC,QACvCpC,EAAE6B,SAAS,EAAG,EAAG,IAAM,MACvBT,WACAC,KAEAA,EAAI","file":"script.js","sourcesContent":["const canvas = document.querySelector('#joyCanvas');\nconst c = canvas.getContext('2d');\n\nlet roundness          = 0.3,\n    xArrivalOld        = 100,\n    xArrival           = 100,\n    yLineBegin         = 60,\n    yArrivalOld        = yLineBegin,\n    lineHeightStartEnd = 5,\n    lineHeightQuarter  = 20,\n    lineHeightMiddle   = 60,\n    spaceBetween       = 13;\n\n// to help position random points\nconst numberGenerator = (start, limit) => {return Math.floor(Math.random() * (limit-start)) + 1 + start} ;\n//draws a curve between two point with the right amount of curviness depending on the spacing of start and begin point\nconst bezierDraw = (xArrival, yArrival) => {\n    c.bezierCurveTo(\n            xArrivalOld + roundness * (xArrival - xArrivalOld),\n            yArrivalOld,\n            xArrival - roundness * (xArrival - xArrivalOld),\n            yArrival,\n            xArrival,\n            yArrival\n        )\n    //switch de variables\n    xArrivalOld = xArrival;\n    yArrivalOld = yArrival;\n};\n\nconst lineDraw = () => {\n    for (var i = 0; i < 80; i++) {\n        // Y starting point for each line\n        yLineBegin += spaceBetween;\n        // reset\n        yArrivalOld = yLineBegin;\n        // X starting point for each line\n        xArrival = 100;\n        c.beginPath();\n        c.moveTo(xArrival, yLineBegin);\n        // to start at the same point for each line\n        c.lineTo(xArrival + 3, yLineBegin);\n        xArrival += 3;\n        // draw begin\n        while (xArrival < 280) {\n            // space between each new point\n            xArrival = numberGenerator(xArrival, xArrival + 20);\n            bezierDraw(xArrival, (numberGenerator(yLineBegin - lineHeightStartEnd, yLineBegin)))\n        }\n        // first quarter\n        while (xArrival < 350) {\n            xArrival = numberGenerator(xArrival, xArrival + 40);\n            bezierDraw(xArrival, (numberGenerator(yLineBegin - lineHeightQuarter, yLineBegin)))\n        }\n        // draw middle\n        while (xArrival < 600) {\n            xArrival = numberGenerator(xArrival, xArrival + 60);\n            bezierDraw(xArrival, (numberGenerator(yLineBegin - lineHeightMiddle, yLineBegin)))\n        }\n        // draw third quarter\n        while (xArrival < 680) {\n            xArrival = numberGenerator(xArrival, xArrival + 40);\n            bezierDraw(xArrival, (numberGenerator(yLineBegin - lineHeightQuarter, yLineBegin)))\n        }\n        // draw end\n        while (xArrival < 880) {\n            xArrival = numberGenerator(xArrival, xArrival + 20);\n            bezierDraw(xArrival, (numberGenerator(yLineBegin - lineHeightStartEnd, yLineBegin)))\n        }\n        xArrivalOld = 100;\n\n        // to end at the same point\n        c.lineTo(900, yLineBegin);\n        //wave width\n        c.lineWidth = 5;\n        c.strokeStyle = '#fefefe';\n        c.stroke();\n        c.fillStyle = '#1b1b1b';\n        // to hide a\n        c.fillRect(0, yLineBegin, 1000, 20);\n        c.fill();\n    }\n}\nlineDraw()\n\nlet randomizer = document.querySelector('.randomizer');\n// randomizer.addEventListener('click', loop);\n\nlet i = 0;\nconst loop = () => {\n    if (i < 30) {\n        requestAnimationFrame(loop); //Avant d'effectuer d'autre action\n        //reset position\n        yLineBegin = 60;\n        yArrivalOld = yLineBegin;\n        //redraw canvas\n        c.clearRect(0, 0, canvas.width, canvas.height);\n        c.fillRect(0, 0, 1000, 1200);\n        lineDraw()\n        i++\n    }else{\n        i = 0;\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Push\n */\n"],"sourceRoot":"/source/"}