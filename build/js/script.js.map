{"version":3,"sources":["script.js"],"names":["canvas","document","querySelector","c","getContext","roundness","xArrivalOld","xArrival","yLineBegin","yArrivalOld","lineHeightStartEnd","lineHeightQuarter","lineHeightMiddle","spaceBetween","numberGenerator","start","limit","Math","floor","random","bezierDraw","yArrival","bezierCurveTo","i","console","log","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","fillStyle","fillRect","fill","closePath"],"mappings":"AAAA,YAuBA,KAAK,GAvBCA,QAASC,SAASC,cAAc,oBAChCC,EAAIH,OAAOI,WAAW,MAExBC,UAAY,GACZC,YAAc,IACdC,SAAW,IACXC,WAAa,GACbC,YAAcD,WACdE,mBAAqB,EACrBC,kBAAoB,GACpBC,iBAAmB,GACnBC,aAAe,GAGbC,gBAAkB,SAACC,EAAOC,GAAW,MAAOC,MAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAU,EAAIA,GAE5FK,WAAa,SAACb,EAAUc,GAC1BlB,EAAEmB,cAAchB,YAAcD,WAAcE,EAAWD,aAAcG,YAAaF,EAAWF,WAAaE,EAAWD,aAAce,EAAUd,EAAUc,GAASf,YAElJC,EACjBE,YAAcY,GAGNE,EAAI,EAAM,GAAHA,EAAOA,IAAI,CAYR,IAXfC,QAAQC,IAAInB,YAAaC,SAAUC,WAAYC,YAAaC,mBAAoBC,kBAAmBC,iBAAkBC,cACrHW,QAAQC,IAAI,cAAe,WAAY,aAAc,cAAe,qBAAqB,oBAAqB,mBAAoB,gBAAejB,YAEnIK,aAAaJ,YAEbD,WAAWD,SAEd,IACXJ,EAAEuB,YACFvB,EAAEwB,OAAOpB,SAAUC,YACnBL,EAAEyB,OAAOrB,SAAW,GAAIC,YACxBD,UAAY,GAEM,IAAXA,UACHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAUO,gBAAgBN,WAAaE,mBAAoBF,YAE1E,MAAkB,IAAXD,UACHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAUO,gBAAgBN,WAAaG,kBAAmBH,YACxE,MAEiB,IAAXD,UACHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAUO,gBAAgBN,WAAaI,iBAAkBJ,YACvE,MAEiB,IAAXD,UACHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAUO,gBAAgBN,WAAaG,kBAAmBH,YAEzE,MAAkB,IAAXD,UACHA,SAAWO,gBAAgBP,SAAUA,SAAW,IAChDa,WAAWb,SAAUO,gBAAgBN,WAAaE,mBAAoBF,YAE1EF,aAAc,IACdC,SAAW,IAAIJ,EAGbyB,OAAO,IAAKpB,YAAYL,EAExB0B,UAAY,EACd1B,EAAE2B,YAAc,UAChB3B,EAAE4B,SACF5B,EAAE6B,UAAY,UAAU7B,EAEtB8B,SAAS,EAAGzB,WAAY,IAAK,KAC/BL,EAAE+B,OACF/B,EAAEgC,YACFX,QAAQC,IAAIF","file":"script.js","sourcesContent":["const canvas = document.querySelector('#analyser_render');\nconst c = canvas.getContext('2d');\n\nlet roundness = 0.3,\n    xArrivalOld = 100,\n    xArrival = 100,\n    yLineBegin = 40,\n    yArrivalOld = yLineBegin,\n    lineHeightStartEnd = 5,\n    lineHeightQuarter = 12,\n    lineHeightMiddle = 40,\n    spaceBetween = 13;\n\n// to help position random points\nconst numberGenerator = (start, limit) => {return Math.floor(Math.random() * (limit-start)) + 1 + start} ;\n//draws a curve between two point with the right amount of curviness depending on the spacing of start and begin point\nconst bezierDraw = (xArrival, yArrival) => {\n    c.bezierCurveTo(xArrivalOld + roundness * ( xArrival - xArrivalOld), yArrivalOld, xArrival - roundness * (xArrival - xArrivalOld), yArrival, xArrival, yArrival)\n    //switch de variables\n    xArrivalOld = xArrival;\n\tyArrivalOld = yArrival;\n};\n\nfor (var i = 0; i< 80; i++){\n    console.log(xArrivalOld, xArrival, yLineBegin, yArrivalOld, lineHeightStartEnd, lineHeightQuarter, lineHeightMiddle, spaceBetween)\n    console.log('xArrivalOld', 'xArrival', 'yLineBegin', 'yArrivalOld', 'lineHeightStartEnd','lineHeightQuarter', 'lineHeightMiddle', 'spaceBetween')\n    // Y starting point for each line\n    yLineBegin += spaceBetween;\n    // reset\n    yArrivalOld = yLineBegin;\n    // X starting point for each line\n    xArrival = 100;\n    c.beginPath();\n    c.moveTo(xArrival, yLineBegin);\n    c.lineTo(xArrival + 20, yLineBegin);\n    xArrival += 20;\n    // draw begin\n    while (xArrival < 200){\n        xArrival = numberGenerator(xArrival, xArrival + 20);\n        bezierDraw(xArrival, numberGenerator(yLineBegin - lineHeightStartEnd, yLineBegin))\n    }\n    while (xArrival < 250){\n        xArrival = numberGenerator(xArrival, xArrival + 20);\n        bezierDraw(xArrival, numberGenerator(yLineBegin - lineHeightQuarter, yLineBegin))\n    }\n    // draw middle\n    while (xArrival < 700){\n        xArrival = numberGenerator(xArrival, xArrival + 60);\n        bezierDraw(xArrival, numberGenerator(yLineBegin - lineHeightMiddle, yLineBegin))\n    }\n    // draw end\n    while (xArrival < 750){\n        xArrival = numberGenerator(xArrival, xArrival + 20);\n        bezierDraw(xArrival, numberGenerator(yLineBegin - lineHeightQuarter, yLineBegin))\n    }\n    while (xArrival < 880){\n        xArrival = numberGenerator(xArrival, xArrival + 20);\n        bezierDraw(xArrival, numberGenerator(yLineBegin - lineHeightStartEnd, yLineBegin))\n    }\n    xArrivalOld = 100;\n    xArrival = 100;\n\n    // to end at the same point\n    c.lineTo(900, yLineBegin);\n    //wave width\n    c.lineWidth = 5;\n    c.strokeStyle = '#fefefe';\n    c.stroke();\n    c.fillStyle = '#1b1b1b';\n    // to hide distorsion\n    c.fillRect(0, yLineBegin, 1000,100);\n    c.fill();\n    c.closePath();\n    console.log(i);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Push\n */\n"],"sourceRoot":"/source/"}